{"version":3,"sources":["components/MyCard.js","App.js","reportWebVitals.js","index.js"],"names":["MyTextArea","prop","useState","editCard","setEditCard","cardButton","setCardButton","style","padding","onBlur","onMouseLeave","onMouseEnter","TextArea","autoFocus","onChange","e","onChangeUpdate","currentkey","value","description","Card","Content","onClick","Description","extra","className","Button","basic","color","active","deleteItem","firebase","initializeApp","databaseURL","connect","props","ref","taskList","addToList","data","push","changeList","index","set","child","remove","React","newValue","setNewvalue","edit","setEdit","list","target","Group","Object","keys","map","key","MyCard","header","meta","marginTop","right","type","placeholder","Icon","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8PAoDeA,EAjDI,SAACC,GAClB,MAA+BC,oBAAS,GAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAkBC,EAAlB,KAWA,OACE,qBAAKC,MAAO,CAACC,QAAQ,OAAQC,OANZ,WACjBL,GAAY,IAKqCM,aAAc,kBAAIJ,GAAc,IAAQK,aAAc,kBAAML,GAAc,IAA3H,SAEFH,EAAU,cAACS,EAAA,EAAD,CAAYC,WAAS,EAACC,SAAU,SAACC,GAAKd,EAAKe,eAAeD,EAAEd,EAAKgB,aAAcC,MAAOjB,EAAKkB,cACrG,eAACC,EAAA,EAAD,WACA,cAACA,EAAA,EAAKC,QAAN,CAAcC,QAdM,WAClBlB,GAAY,IAad,SAGE,cAACgB,EAAA,EAAKG,YAAN,UACCtB,EAAKkB,gBAIR,cAACC,EAAA,EAAKC,QAAN,CAAcG,OAAK,EAAnB,SACCnB,GAAgB,qBAAKoB,UAAU,iBAAf,SACb,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAM,MAAMC,QAAQ,EAAOP,QAAS,SAACP,GAAD,OAAKd,EAAK6B,WAAW7B,EAAKgB,aAA5E,8BCzBNc,IAASC,cAAc,CACrBC,YACE,yEAGJ,IA4CeC,qBAAQ,SAACC,EAAOC,GAAR,MAAiB,CACtCC,SAAU,OACVC,UAAW,SAACC,GAAD,OAAUH,EAAI,QAAQI,KAAKD,IACtCE,WAAY,SAACF,EAAKG,GAAN,OAAgBN,EAAI,QAAD,OAASM,IAASC,IAAIJ,IACrDT,WAAY,SAACY,GAAD,OAAWN,EAAI,QAAQQ,MAAMF,GAAOG,aAJnCX,EA5CF,SAAC,GAAqD,IAAnDG,EAAkD,EAAlDA,SAAUI,EAAwC,EAAxCA,WAAYH,EAA4B,EAA5BA,UAAWR,EAAiB,EAAjBA,WAE/C,EAA+BgB,IAAM5C,SAAS,IAA9C,mBAAO6C,EAAP,KAAgBC,EAAhB,KACA,EAAuBF,IAAM5C,UAAS,GAAtC,mBAAO+C,EAAP,KAAYC,EAAZ,KACMC,EAAI,eAAOd,GAEXrB,EAAiB,SAACD,EAAE2B,GAExBD,EAAW1B,EAAEqC,OAAOlC,MAAMwB,IAI5B,OACA,qBAAKnC,MAAO,CAACC,QAAQ,MAArB,SACE,eAACY,EAAA,EAAKiC,MAAN,WAGEC,OAAOC,KAAKJ,GAAMK,KAAI,SAACC,GAAD,OAAQ,cAACC,EAAD,CAAQ5B,WAAYA,EAAYb,WAAYwC,EAAezC,eAAgBA,EAAgB2C,OAAO,YAAYC,KAAK,UAAUzC,YAAagC,EAAKM,IAAzFA,MAGtF,qBAAKlD,MAAO,CAACsD,UAAU,KAAMC,MAAM,MAAOxC,QAAS,kBAAM4B,GAAQ,IAAQzC,OAAQ,kBAAIyC,GAAQ,IAA7F,SAEED,EAAwE,cAACrC,EAAA,EAAD,CAAUmD,KAAK,OAAmBlD,WAAS,EAAEK,MAAO6B,EAAUiB,YAAa,cAAevD,OAAQ,SAACM,GAExKgC,IACDT,EAAUS,GACVC,EAAY,MAKhBlC,SAAU,SAACC,GAAD,OAAOiC,EAAYjC,EAAEqC,OAAOlC,SAT+D,OAA5F,eAACQ,EAAA,EAAD,CAAQE,MAAM,OAAd,kBAA0B,cAACqC,EAAA,EAAD,CAAMC,KAAK,4BCrBnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.f10320e4.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Card, TextArea, Button } from 'semantic-ui-react'\r\n\r\nconst MyTextArea = (prop) => {\r\n  const [editCard,setEditCard] = useState(false);\r\n  const [cardButton,setCardButton] = useState(false);\r\n\r\n  const onClickCard = () =>{\r\n    setEditCard(true)\r\n  }\r\n\r\n  const onBlurCard = () =>{\r\n    setEditCard(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={{padding:'6px'}} onBlur={onBlurCard} onMouseLeave={()=>setCardButton(false)} onMouseEnter={() => setCardButton(true)}>\r\n{\r\n  editCard? <TextArea   autoFocus onChange={(e)=>{prop.onChangeUpdate(e,prop.currentkey)}} value={prop.description}/> :   \r\n  <Card >\r\n  <Card.Content onClick={onClickCard}>\r\n     \r\n     \r\n    <Card.Description>\r\n    {prop.description}\r\n    </Card.Description>\r\n  </Card.Content>\r\n\r\n  <Card.Content extra>\r\n{  cardButton &&   <div className='ui two buttons'>\r\n      <Button basic color='red' active={false} onClick={(e)=>prop.deleteItem(prop.currentkey)}>\r\n        Delete\r\n      </Button>\r\n    </div>}\r\n\r\n  </Card.Content>\r\n</Card>      \r\n \r\n}\r\n\r\n\r\n    </div>\r\n\r\n\r\n)\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default MyTextArea\r\n","import React, { useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { connect } from \"react-firebase\";\nimport { Form, TextArea, Card, Button, Icon } from 'semantic-ui-react'\nimport MyCard from './components/MyCard'\n\nfirebase.initializeApp({\n  databaseURL:\n    \"https://dentira-ba865-default-rtdb.europe-west1.firebasedatabase.app\"\n});\n\nconst Task = ({ taskList, changeList, addToList, deleteItem }) => {\n\n  const [newValue,setNewvalue] = React.useState('');\n  const [edit,setEdit] = React.useState(false);\n  const list = {...taskList};\n\n  const onChangeUpdate = (e,index) => {\n\n    changeList(e.target.value,index);\n\n  }\n\n  return (\n  <div style={{padding:'1%'}}>\n    <Card.Group>\n    {\n      \n      Object.keys(list).map((key)=> <MyCard deleteItem={deleteItem} currentkey={key} key={key} onChangeUpdate={onChangeUpdate} header='my header' meta='my meta' description={list[key]}></MyCard> )\n    \n    }\n    <div style={{marginTop:'5%', right:'5%'}} onClick={() => setEdit(true)}  onBlur={()=>setEdit(false)}   >\n    \n    {!edit ? <Button color='blue'> Add <Icon name='plus right' /></Button> :  <TextArea type=\"text\" key={\"new\"} autoFocus  value={newValue} placeholder={\"Add an item\"} onBlur={(e)=>{\n      \n      if(newValue){\n        addToList(newValue);\n        setNewvalue('');\n      }\n      \n    }}\n\n    onChange={(e) => setNewvalue(e.target.value)}    />  } \n\n    </div>\n    </Card.Group>\n\n\n\n\n\n   \n  </div>);\n};\n\nexport default connect((props, ref) => ({\n  taskList: \"task\",\n  addToList: (data) => ref(`task`).push(data),\n  changeList: (data,index) => ref(`task/${index}`).set(data),\n  deleteItem: (index) => ref(`task`).child(index).remove()\n\n}))(Task);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}